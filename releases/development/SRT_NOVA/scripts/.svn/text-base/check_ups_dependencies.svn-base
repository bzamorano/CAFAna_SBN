#!/bin/bash

# Simple script to read a UPS products version file and check dependencies
# of each external UPS product that we set up.
# Optionally can also setup each, one-by-one (printing which is being setup)
# so that one can track down quickly which external might be throwing any
# dependency issue.
#
# Author: Gavin S. Davies (gsdavies@iu.edu)

   

if [ $# -eq 0 ]; then
    echo
    echo -e "\e[01;31mUsage: check_ups_dependencies [required args] <file> [optional args] <setup_prod>\e[0m"
    echo " "
    echo "Required argument:"
    echo "<file> : Point to the UPS products version file"
    echo "         i.e. /nova/app/home/novasoft/slf6/novasoft/setup/nova-offline-ups-externals-development"
    echo "Optional argument:"
    echo "<setup_prod> options: 0, 1  --> 0 is default (false)"
    echo
    exit
elif [ $# -eq 1 ];then
    setup_prod=0 # i.e. don't run setup of each of the externals
    externals_file=$1
    if [ ! -f $externals_file ]; then
	echo
	echo -e "\e[01;31mUPS products version file $externals_file not found!\e[0m"
	echo
	exit
    fi
elif [ $# -eq 2 ];then
    if [[ "$2" = "0" || "$2" = "1" ]]; then
	setup_prod=$2
	if [ "$NOVASOFT_SETUP" = "1" ]; then
	    echo
	    echo -e "\e[01;31mDo not try to setup externals when you have already set them up.\e[0m"
	    echo -e "\e[01;31mNeed a clean environment. Log out and back in but don't setup_nova.\e[0m"
	    echo 
	    exit
	fi
	externals_file=$1
	if [ ! -f $externals_file ]; then
	    echo
	    echo -e "\e[01;31mUPS products version file $externals_file not found!\e[0m"
	    echo
	    exit
	fi
    else
	echo
	echo -e "\e[01;31mWrong value for <setup_prod> option. Options are 0 or 1\e[0m"
	echo
	exit
    fi
else
    echo
    echo -e "\e[01;31mToo many arguments. Maximum of two allowed.\e[0m"
    echo -e "\e[01;31mUsage: check_ups_dependencies [required args] <file> [optional args] <setup_prod>\e[0m"
    echo ""
    echo "Required argument:"
    echo "<file> : Point to the externals version file"
    echo "         i.e. /nova/app/home/novasoft/slf6/novasoft/setup/nova-offline-ups-externals-development"
    echo "Optional argument:"
    echo "<setup_prod> options: 0, 1  --> 0 is default (false)"
    echo
    exit
fi

echo $1
echo $2
echo $externals_file
echo $setup_prod

source /grid/fermiapp/products/nova/externals/setup

SRT_PUBLIC_CONTEXT=/nova/app/home/novasoft/slf6/novasoft/releases/development
SRT_BASE_RELEASE=development


logname=/tmp/check_ups_dependencies.log
if [ -f $logname ];then
    rm -f $logname
else
    touch $logname
fi

while read line
do
    prodname=`echo $line | sed -e "s/ .*$//g" `    
    if [ "$setup_prod" = "0" ];then
	echo | tee -a $logname
	echo "Dependencies for $prodname" | tee -a $logname
	ups depend $line |& tee -a $logname
	# Useful to also print out info for novadaq
	# Most recent issues have been with getting dependencies right
	# for this and novadaqdeps
	if [ "$prodname" = "novaddt" ]; then
	    novadaq_prod=`ups depend $line | grep novadaq`
	    echo $novadaq_prod
	    novadaq_array=( $novadaq_prod )
	    echo | tee -a $logname
	    echo "*****Dependencies for novadaq*****" | tee -a $logname
	    ups depend novadaq ${novadaq_array[1]} -q ${novadaq_array[7]} |& tee -a $logname
	fi
    fi
    if [ "$setup_prod" = "1" ];then
	echo | tee -a $logname
	echo "Setting up $prodname ..." | tee -a $logname
	setup -B $line |& tee -a $logname
    fi 
done < $externals_file


echo
echo "DONE"
echo "Check output in $logname."
echo
