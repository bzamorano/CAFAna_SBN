#!/bin/bash

if [ -z "$EXTERNALS" ]; then
    echo 'Please set the $EXTERNALS environmental variable before running this script.'
    echo 'If you are using this script as a first time import of externals make youreself a directory and set the $EXTERNALS variable.'
    exit 1
fi

# An offsite maintainer might have a different local username than the FNAL kerberos principal
# Can change this variable to allow kerberized scp
script_user=`whoami`
novavmhost='novagpvm04.fnal.gov'
fnalvm="$script_user@$novavmhost"

cd ${EXTERNALS}
mkdir tars
cd tars

# get the pull script
wget http://scisoft.fnal.gov/scisoft/bundles/tools/pullProducts
chmod +x pullProducts

for os in slf6;
do
  for build in debug prof
    do
    ./pullProducts ${EXTERNALS} ${os} nu-v2_22_01 s67-e15 ${build}
  done
done

# pull novadaq tars
#remote_location=http://scisoft.fnal.gov/scisoft/packages/novadaq/v12_00_00/
#for os in slf6
#do
#  for build in debug prof
#  do
#    cd ${EXTERNALS}/tars
#    tarball=novadaq-12.00.00-${os}-x86_64-e9-${build}.tar.bz2
#    if [ ! -e $tarball ];then
#      wget ${remote_location}/${tarball}
#      cd ${EXTERNALS}
#      tar xf tars/${tarball}
#    fi
#  done
#done



# pull novadaqdeps - a wrapper product to setup align versions of novadaq and novaddt
#remote_location=http://scisoft.fnal.gov/scisoft/packages/novadaqdeps/v12_00_00/
#cd ${EXTERNALS}/tars
#tarball=novadaqdeps-12.00.00-noarch.tar.bz2
#if [ ! -e $tarball ];then
#    wget ${remote_location}/${tarball}
#    cd ${EXTERNALS}
#    tar xf tars/${tarball}
#fi


# pull novaddt tars
#remote_location=http://scisoft.fnal.gov/scisoft/packages/novaddt/v12_00_00/
#for os in slf6
#do
#  for build in debug prof
#  do
#    cd ${EXTERNALS}/tars
#    tarball=novaddt-12.00.00-${os}-x86_64-e9-s28-${build}.tar.bz2
#    if [ ! -e $tarball ];then
#      wget ${remote_location}/${tarball}
#      cd ${EXTERNALS}
#      tar xf tars/${tarball}
#    fi
#  done
#done


# pull genie_fluxopt
remote_location=http://scisoft.fnal.gov/scisoft/packages/genie_fluxopt/v17_03_14a
cd ${EXTERNALS}/tars
tarball=genie_fluxopt-17.03.14a-noarch-nova.tar.bz2
if [ ! -e $tarball ]; then
  wget ${remote_location}/${tarball}
  cd ${EXTERNALS}
  tar xf tars/${tarball}
fi

# pull novaddtdeps
#remote_location=http://scisoft.fnal.gov/scisoft/packages/novaddtdeps/v12_00_00/
#cd ${EXTERNALS}/tars
#tarball=novaddtdeps-12.00.00-noarch.tar.bz2
#if [ ! -e $tarball ];then
#    wget ${remote_location}/${tarball}
#    cd ${EXTERNALS}
#    tar xf tars/${tarball}
#fi


# pull Valgrind
for os in slf6
do
  remote_location=http://scisoft.fnal.gov/scisoft/packages/valgrind/v3_13_0
  tarball=valgrind-3.13.0-${os}-x86_64.tar.bz2
  cd ${EXTERNALS}/tars
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi
done

# ---- 2018-03-27
# ---------- NEW EXTERNALS ------- START

# pull cstxsd
remote_location=http://scisoft.fnal.gov/scisoft/packages/cstxsd/v4_0_0h
for os in slf6
do
  tarball=cstxsd-4.0.0h-${os}-x86_64-e15.tar.bz2
  cd ${EXTERNALS}/tars
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi
done

# pull xerces_c
remote_location=http://scisoft.fnal.gov/scisoft/packages/xerces_c/v3_2_0a/
for os in slf6
do
  for build in debug prof
  do
   cd ${EXTERNALS}/tars
    tarball=xerces_c-3.2.0a-${os}-x86_64-e15-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done

# pull dk2nugenie
remote_location=http://scisoft.fnal.gov/scisoft/packages/dk2nugenie/v01_06_01e/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=dk2nugenie-01.06.01e-${os}-x86_64-e15-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done

# pull artdaq_core
remote_location=http://scisoft.fnal.gov/scisoft/packages/artdaq_core/v3_01_08/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=artdaq_core-3.01.08-${os}-x86_64-e15-nu-s67-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done

# pull genie_phyopt
remote_location=http://scisoft.fnal.gov/scisoft/packages/genie_phyopt/v2_12_10/
cd ${EXTERNALS}/tars
tarball=genie_phyopt-2.12.10-noarch-dkcharmtau.tar.bz2
if [ ! -e $tarball ];then
  wget ${remote_location}/${tarball}
  cd ${EXTERNALS}
  tar xf tars/${tarball}
fi

# pull genie_xsec
remote_location=http://scisoft.fnal.gov/scisoft/packages/genie_xsec/v2_12_10/
cd ${EXTERNALS}/tars
tarball=genie_xsec-2.12.10-noarch-DefaultPlusMECWithNC.tar.bz2
if [ ! -e $tarball ];then
  wget ${remote_location}/${tarball}
  cd ${EXTERNALS}
  tar xf tars/${tarball}
fi

# pull ppfx
remote_location=http://scisoft.fnal.gov/scisoft/packages/ppfx/v02_03/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=ppfx-02.03-${os}-x86_64-e15-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done

# pull ifdh_art
remote_location=http://scisoft.fnal.gov/scisoft/packages/ifdh_art/v2_06_01/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=ifdh_art-2.06.01-${os}-x86_64-e15-nu-s67-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done

# pull gdb
remote_location=http://scisoft.fnal.gov/scisoft/packages/gdb/v8_0_1/
for os in slf6
do
  cd ${EXTERNALS}/tars
  tarball=gdb-8.0.1-${os}-x86_64.tar.bz2
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi
done

# pull tensorflow
remote_location=http://scisoft.fnal.gov/scisoft/packages/tensorflow/v1_3_0c/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=tensorflow-1.3.0c-${os}-x86_64-e15-p2714b-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done

# pull castxml
remote_location=http://scisoft.fnal.gov/scisoft/packages/castxml/v0_00_00_f20180122/
for os in slf6
do
  cd ${EXTERNALS}/tars
  tarball=castxml-0.00.00.f20180122-${os}-x86_64.tar.bz2
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi
done

# pull pygccxml
remote_location=http://scisoft.fnal.gov/scisoft/packages/pygccxml/v1_9_1/
cd ${EXTERNALS}/tars
tarball=pygccxml-1.9.1-noarch-p2714b.tar.bz2
if [ ! -e $tarball ];then
  wget ${remote_location}/${tarball}
  cd ${EXTERNALS}
  tar xf tars/${tarball}
fi

# ---------- NEW EXTERNALS ------- FIN

# pull Caffe

for os in slf6;
do
  for build in debug prof
    do
    ./pullProducts ${EXTERNALS} ${os} caffe-v1_0i e15 ${build}
  done
done




# pull cppcheck v1_63
if [ ! -e ${EXTERNALS}/cppcheck/v1_63 ];then

    cd ${EXTERNALS}/tars
    tarball=cppcheck-v1_63.tar.gz
    wget http://nusoft.fnal.gov/nova/users/jpdavies/$tarball
    cd ${EXTERNALS}
    tar -xf tars/${tarball}

fi

# pull xgboost v0.60
if [ ! -e ${EXTERNALS}/xgboost/v0.60 ];then

    cd ${EXTERNALS}/tars
    tarball=xgboost-v0.60.tar.gz
    wget http://nusoft.fnal.gov/nova/users/lkolupae/$tarball
    cd ${EXTERNALS}
    tar -xf tars/${tarball}

fi


# pull psycopg2 v2_5_p2_7
if [ ! -e ${EXTERNALS}/psycopg2/v2_5_p2_7 ];then

    cd ${EXTERNALS}/tars
    tarball=psycopg2_v2_5_p2_7.tar.bz2
    wget http://nusoft.fnal.gov/nova/users/jpdavies/$tarball
    cd ${EXTERNALS}
    tar -xf tars/${tarball}

fi

if [ ! -e ${EXTERNALS}/ifdhc_config/v2_3_3 ];then
    remote_location=http://scisoft.fnal.gov/scisoft/packages/ifdhc_config/v2_3_3
    tarball=ifdhc_config-2.3.3-noarch.tar.bz2
    cd ${EXTERNALS}/tars
    if [ ! -e $tarball ];then
        wget ${remote_location}/${tarball}
        cd ${EXTERNALS}
        tar xf tars/${tarball}
    fi
fi

cd $EXTERNALS

# First time install should first download upd product
# Used to be part of the ups install, probably an oversight in the newest version.
if [ ! -d "upd" ]; then
  cd ${EXTERNALS}/tars
  remote_location=http://scisoft.fnal.gov/scisoft/packages/upd/v5_0_1
  tarball=upd-5.0.1-noarch.tar.bz2
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi

  cd ${EXTERNALS}/tars
  remote_location=http://scisoft.fnal.gov/scisoft/packages/upd/v5_0_1
  tarball=upd-5.0.1-source.tar.bz2
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi

  cd $EXTERNALS

  tar xf tars/upd-5.0.1-source.tar.bz2
fi



source $EXTERNALS/setup
setup upd

echo "Installing products via UPD"

upd install lid                                v01.03  #Bumped to v01.03 on 2016/02/10
upd install eid                                v01.00
upd install lemlittle                          v01.03  #Bumped to v01.03 on 2015/05/18
upd install ncid                               v01.03
upd install qepid                              v01.01
upd install remid                              v01.03  #Back from v01.06 to v01.03
upd install cvn                                v01.04
upd install cvnprong                           v01.00
upd install cvnreg                             v01.01  #Bumped to v01.01 on 2017/08/29
upd install ucana                              v01.07  #Bumped to v01.05 on 2017/08/29
upd install nuecosrej                          v01.01  #Bumped to v01.01 on 2017/08/23
upd install wsnumu                             v01.00  #First installed on 2018/01/16
upd install rvp                                v01.00
upd install nuededx                            v01.01  #Bumped to v01.01 on 2017/12/01
upd install nuone                              v01.02  #Bumped to v01.02 on 2017/09/22
upd install nusdata                            v00.10  #Bumped to v00.10 on 2018/06/27
upd install monopoleid                         v01.00  #on 2017/09/29
upd install xsecccpi0inc                       v01.01
upd install xsecncpi0                          v01.04  #Bumped to v01.04 on 2017/11/08
upd install FCHelperAna2017                    v01.02
upd install calibcsvs                          v12.06
upd install calibfixnd                         v01.00  #on 2017/09/23
upd install -G "-c" sam_web_client             v2_0
upd install -G "-c" fife_utils                 v3_1_3
upd install         jobsub_client              v1_2_6_2
upd install condb                              v2_0b
upd install -G "-c" NovaGridUtils              v03.08
upd install -G "-c" novaproduction             v02.49
upd install -G "-c" library_shim               v03.03
upd install         FANN v2.2.0f -f Linux64bit+2.6-2.5
upd install         FANN v2.2.0f -f Linux64bit+2.6-2.12
upd install         bpf                        v02.01
upd install         ccache                     v03.03.03
upd install         pyyaml                     v3_12
#deprecated
#upd install         totalview                  v8_15_0

#jobsub_client seems to use a non-standard way to require pycurl, hence the upd install does not pull
#pycurl in as dependency
#manually install them
upd install -G "-c" pycurl v7_15_5 -H Linux64bit+2.6-2.5
upd install -G "-c" pycurl v7_16_4 -H Linux64bit+2.6-2.12


#JPD - We need to make sure that the versions of products we try to declare as current are in fact declared as current
#source ${EXTERNALS}/setup #No need to do this, we already setup in the UPD stage

echo "Setting \"current\" versions of products in local UPS database"
ups declare -c  ifdhc_config                v2_3_3
ups declare -c  sam_web_client              v2_0
ups declare -c  fife_utils                  v3_1_3
ups declare -c  jobsub_client               v1_2_6_2
ups declare -c  NovaGridUtils               v03.08
ups declare -c  novaproduction              v02.49
ups declare -c  library_shim                v03.03
