#!/bin/bash

if [ -z "$EXTERNALS" ]; then
    echo 'Please set the $EXTERNALS environmental variable before running this script.'
    echo 'If you are using this script as a first time import of externals make youreself a directory and set the $EXTERNALS variable.'
    exit 1
fi

# An offsite maintainer might have a different local username than the FNAL kerberos principal
# Can change this variable to allow kerberized scp
script_user=`whoami`
novavmhost='novagpvm04.fnal.gov'
fnalvm="$script_user@$novavmhost"

cd ${EXTERNALS}
mkdir tars
cd tars

# get the pull script
wget http://scisoft.fnal.gov/scisoft/bundles/tools/pullProducts
chmod +x pullProducts

for os in slf6;
do
  for build in debug prof
    do
    ./pullProducts ${EXTERNALS} ${os} nu-v1_21_11a s28-e9 ${build}
  done
done

# pull novadaq tars
remote_location=http://scisoft.fnal.gov/scisoft/packages/novadaq/v11_00_00/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=novadaq-11.00.00-${os}-x86_64-e9-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done



# pull novadaqdeps - a wrapper product to setup align versions of novadaq and novaddt
remote_location=http://scisoft.fnal.gov/scisoft/packages/novadaqdeps/v11_00_00/
cd ${EXTERNALS}/tars
tarball=novadaqdeps-11.00.00-noarch.tar.bz2
if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
fi


# pull novaddt tars
remote_location=http://scisoft.fnal.gov/scisoft/packages/novaddt/v11_00_04/
for os in slf6
do
  for build in debug prof
  do
    cd ${EXTERNALS}/tars
    tarball=novaddt-11.00.04-${os}-x86_64-e9-s28-${build}.tar.bz2
    if [ ! -e $tarball ];then
      wget ${remote_location}/${tarball}
      cd ${EXTERNALS}
      tar xf tars/${tarball}
    fi
  done
done


# pull genie_fluxopt
remote_location=http://scisoft.fnal.gov/scisoft/packages/genie_fluxopt/v17_03_14a
cd ${EXTERNALS}/tars
tarball=genie_fluxopt-17.03.14a-noarch-nova.tar.bz2
if [ ! -e $tarball ]; then
  wget ${remote_location}/${tarball}
  cd ${EXTERNALS}
  tar xf tars/${tarball}
fi

# pull novaddtdeps
remote_location=http://scisoft.fnal.gov/scisoft/packages/novaddtdeps/v11_00_00/
cd ${EXTERNALS}/tars
tarball=novaddtdeps-11.00.00-noarch.tar.bz2
if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
fi


# pull Valgrind
for os in slf6
do
  remote_location=http://scisoft.fnal.gov/scisoft/packages/valgrind/v3_11_0
  tarball=valgrind-3.11.0-${os}-x86_64.tar.bz2
  cd ${EXTERNALS}/tars
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi
done



# pull Caffe

for os in slf6;
do
  for build in debug prof
    do
    ./pullProducts ${EXTERNALS} ${os} caffe-v4_00_00 e9 ${build}
  done
done




# pull cppcheck v1_63
if [ ! -e ${EXTERNALS}/cppcheck/v1_63 ];then

    cd ${EXTERNALS}/tars
    tarball=cppcheck-v1_63.tar.gz
    wget http://nusoft.fnal.gov/nova/users/jpdavies/$tarball
    cd ${EXTERNALS}
    tar -xf tars/${tarball}

fi

# pull xgboost v0.60
if [ ! -e ${EXTERNALS}/xgboost/v0.60 ];then

    cd ${EXTERNALS}/tars
    tarball=xgboost-v0.60.tar.gz
    wget http://nusoft.fnal.gov/nova/users/lkolupae/$tarball
    cd ${EXTERNALS}
    tar -xf tars/${tarball}

fi


# pull psycopg2 v2_5_p2_7
if [ ! -e ${EXTERNALS}/psycopg2/v2_5_p2_7 ];then

    cd ${EXTERNALS}/tars
    tarball=psycopg2_v2_5_p2_7.tar.bz2
    wget http://nusoft.fnal.gov/nova/users/jpdavies/$tarball
    cd ${EXTERNALS}
    tar -xf tars/${tarball}

fi

if [ ! -e ${EXTERNALS}/ifdhc_config/v2_0_3b ];then
    remote_location=http://scisoft.fnal.gov/scisoft/packages/ifdhc_config/v2_0_3b
    tarball=ifdhc_config-2.0.3b-noarch.tar.bz2
    cd ${EXTERNALS}/tars
    if [ ! -e $tarball ];then
        wget ${remote_location}/${tarball}
        cd ${EXTERNALS}
        tar xf tars/${tarball}
    fi
fi

cd $EXTERNALS

# First time install should first download upd product
# Used to be part of the ups install, probably an oversight in the newest version.
if [ ! -d "upd" ]; then
  cd ${EXTERNALS}/tars
  remote_location=http://scisoft.fnal.gov/scisoft/packages/upd/v5_0_1
  tarball=upd-5.0.1-noarch.tar.bz2
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi

  cd ${EXTERNALS}/tars
  remote_location=http://scisoft.fnal.gov/scisoft/packages/upd/v5_0_1
  tarball=upd-5.0.1-source.tar.bz2
  if [ ! -e $tarball ];then
    wget ${remote_location}/${tarball}
    cd ${EXTERNALS}
    tar xf tars/${tarball}
  fi

  cd $EXTERNALS

  tar xf tars/upd-5.0.1-source.tar.bz2
fi



source $EXTERNALS/setup
setup upd

echo "Installing products via UPD"

upd install lid                                v01.03  #Bumped to v01.03 on 2016/02/10
upd install eid                                v01.00
upd install lemlittle                          v01.03  #Bumped to v01.03 on 2015/05/18
upd install ncid                               v01.02
upd install qepid                              v01.01
upd install remid                              v01.03  #Back from v01.06 to v01.03
upd install cvn                                v01.03
upd install cvnprong                           v01.00
upd install cvnreg                             v01.01  #Bumped to v01.01 on 2017/08/29
upd install ucana                              v01.07  #Bumped to v01.05 on 2017/08/29
upd install nuecosrej                          v01.01  #Bumped to v01.01 on 2017/08/23
upd install rvp                                v01.00
upd install nuededx                            v01.00  #on 2017/08/30
upd install nuone                              v01.00  #on 2017/09/08
upd install xsecccpi0inc                       v01.01
upd install xsecncpi0                          v01.03  #Bumped to v01.03 on 2017/08/28
upd install calibcsvs                          v12.06
upd install -G "-c" sam_web_client             v2_0
upd install -G "-c" fife_utils                 v2_8
upd install         jobsub_client              v1_2_2
upd install condb                              v2_0b
upd install -G "-c" NovaGridUtils              v01.97
upd install -G "-c" novaproduction             v01.30
upd install -G "-c" library_shim               v03.02
upd install         FANN v2.2.0f -f Linux64bit+2.6-2.5
upd install         FANN v2.2.0f -f Linux64bit+2.6-2.12
upd install         bpf                        v02.01
upd install         ccache                     v03.03.03
upd install         pyyaml                     v3_12

#jobsub_client seems to use a non-standard way to require pycurl, hence the upd install does not pull
#pycurl in as dependency
#manually install them
upd install -G "-c" pycurl v7_15_5 -H Linux64bit+2.6-2.5
upd install -G "-c" pycurl v7_16_4 -H Linux64bit+2.6-2.12


#JPD - We need to make sure that the versions of products we try to declare as current are in fact declared as current
#source ${EXTERNALS}/setup #No need to do this, we already setup in the UPD stage

echo "Setting \"current\" versions of products in local UPS database"
ups declare -c  ifdhc_config                v2_0_3b
ups declare -c  sam_web_client              v2_0
ups declare -c  fife_utils                  v2_8
ups declare -c  jobsub_client               v1_2_2
ups declare -c  NovaGridUtils               v01.97
ups declare -c  novaproduction              v01.30
ups declare -c  library_shim                v03.02
