<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.redmine.RedmineProjectProperty plugin="redmine@0.15">
      <redmineWebsiteName>Fermilab Redmine</redmineWebsiteName>
      <projectName>novaart</projectName>
    </hudson.plugins.redmine.RedmineProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>NOVADAQVER</name>
          <description></description>
          <defaultValue>v10_01_00</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NOVADAQDEPS_VER</name>
          <description></description>
          <defaultValue>v02_04_02</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H(0-2) * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>BUILDTYPE</name>
      <values>
        <string>debug</string>
        <string>prof</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>SLF6</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
source /grid/fermiapp/products/nova/externals/setups
cd $WORKSPACE
rm -rfv $WORKSPACE/buildout
mkdir -p $WORKSPACE/buildout
rm -rf buildtemp
mkdir -p buildtemp

buildqual=${EQUAL}

dorp=&quot;-d&quot;
if [ &quot;${BUILDTYPE/debug}&quot; = &quot;${BUILDTYPE}&quot; ]; then
   dorp=&quot;-p&quot;
fi

echo &quot;BUILDTYPE is ${BUILDTYPE}&quot;
echo &quot;setting the build qualifier to ${dorp}&quot;

cd ${WORKSPACE}/buildtemp
export TOPLEV=${WORKSPACE}/buildtemp
mkdir localProducts
mkdir src
mkdir build_novadaq
mkdir build_novaddt
mkdir build_novasoft
export SRCDIR=${TOPLEV}/src
export BUILDDAQ=${TOPLEV}/build_novadaq
export BUILDDDT=${TOPLEV}/build_novaddt
export BUILDOFF=${TOPLEV}/build_novasoft
export LOCALPROD=${TOPLEV}/localProducts
export PRODUCTS=${LOCALPROD}:/grid/fermiapp/products/common/db:${PRODUCTS}

echo &quot;TOPLEV is ${TOPLEV}&quot;
echo &quot;BUILDDAQ is ${BUILDDAQ}&quot;
echo &quot;BUILDDDT is ${BUILDDDT}&quot;
echo &quot;SRCDIR is ${SRCDIR}&quot;
echo &quot;LOCALPROD is ${LOCALPROD}&quot;

# checkout the novadaqdeps product version and make the tarball
depver=${NOVADAQDEPS_VER//v}
depver=${depver//_/.}
export NOVADEPFILE=&quot;novadaqdeps-${depver}-noarch.tar.bz2&quot;

svn co http://cdcvs.fnal.gov/subversion/novaart-novadaqdeps/tags/${NOVADAQDEPS_VER} novadaqdeps
tar -cjf ${NOVADEPFILE} novadaqdeps/
rm -rf novadaqdeps
cp -pv $PWD/${NOVADEPFILE} ${LOCALPROD}/
if [ &quot;${dorp}&quot; == &quot;-d&quot; ]; then
 cp -pv ${NOVADEPFILE} ${WORKSPACE}/buildout
fi  
rm *.bz2

# setup the local products directory
cd ${LOCALPROD}
cp -R /grid/fermiapp/products/nova/externals/.upsfiles ${LOCALPROD}
tar -xf ${NOVADEPFILE}

# check out the source code to build
cd ${SRCDIR}             
cvs -d :pserver:anonymous@cdcvs.fnal.gov:/cvs/nova checkout -d novadaqups Online/pkgs/ups
sh  novadaqups/bootstrap.sh $PWD
rm -rf novadaqups
mv novadaq/${NOVADAQVER}/cet cet
rm -rf novadaq
mv cet novadaq
svn co http://cdcvs.fnal.gov/subversion/novaddt.svn/trunk novaddt
svn co http://cdcvs.fnal.gov/subversion/novaart.pkgs.svn/trunk novasoft

# build the novadaq code
cd ${BUILDDAQ}  
source ${SRCDIR}/novadaq/ups/setup_for_development ${dorp} ${buildqual}
buildtool -j8 -p
buildtool -i -I ${LOCALPROD}
cp -pv $PWD/nova*.tar.bz2 $WORKSPACE/buildout

# build the novaddt code
cd ${BUILDDDT}  
source ${SRCDIR}/novaddt/ups/setup_for_development ${dorp} ${buildqual}
buildtool -j8 -p
buildtool -i -I ${LOCALPROD}
cp -pv $PWD/nova*.tar.bz2 $WORKSPACE/buildout

# build the novasoft code
cd ${BUILDOFF}  
source ${SRCDIR}/novasoft/ups/setup_for_development ${dorp} ${buildqual}
buildtool -j8 -p
cp -pv $PWD/nova*.tar.bz2 $WORKSPACE/buildout

# make sure to copy the novadaqdeps and novaenv tarballs to the buildout as well
cp -pv ${LOCALPROD}/nova*.tar.bz2 ${WORKSPACE}/buildout

#exit 0</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>buildout/**</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>brebel@fnal.gov mfrank@fnal.gov psail@fnal.gov</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>