%!PS-Adobe-2.0 EPSF-1.2
%%Title: (Development Release)
%%Creator: (MacDraft 3.1: LaserWriter 8 8.2)
%%CreationDate: (9:37 AM Wednesday, June 24, 1998)
%%For: (ROBERT HARRIS)
%%Pages: 1
%%DocumentFonts: Courier
%%BoundingBox: 38 136 566 653
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%DocumentSuppliedFonts:
userdict begin/dscInfo 5 dict dup begin
/Title(Development Release)def
/Creator(MacDraft 3.1: LaserWriter 8 8.2)def
/CreationDate(9:37 AM Wednesday, June 24, 1998)def
/For(ROBERT HARRIS)def
/Pages 1 def
end def end

/featurecleanup{stopped cleartomark countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
countdictstack[{
currentsystemparams /CurInputDevice get
(%Fax) anchorsearch
{pop pop 1 dict dup/Policies 1 dict dup/PageSize 3 put put setpagedevice}
{pop}ifelse}featurecleanup
/md 162 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
/G/setgray ld
/:F/setrgbcolor ld
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
/currentpacking where {pop sc_oldpacking setpacking}if end
md begin
countdictstack[{
}featurecleanup
countdictstack[{
}featurecleanup
(ROBERT HARRIS)setjob
/mT[1 0 0 -1 14 778]def
[1 0 0 1 0 0]mT exch mT concatmatrix pop
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
/f0_1/Times-Roman
:mre
/f0_24 f0_1 24 scf
/f0_14 f0_1 14 scf
/f1_1 f0_1
:v def
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%iddDict v1.5
/iddDict dup where 
	{
		pop pop
	}
	{
	/iddDictlen 80 def
	userdict exch iddDictlen dict dup begin put

	/_gs /gsave load def
	/_gr /grestore load def
	/_mt /moveto load def
	/_lt /lineto load def
	/_sd /setdash load def
	/_lc /setlinecap load def
	/_sc /setrgbcolor load def
	/_lw /setlinewidth load def
	/_st /stroke load def
	/_ef /eofill load def
	/_c /closepath load def
	/_n /newpath load def
	/_tr /translate load def
	/_rt /rotate load def
	/_cm /currentmatrix load def
	/_sg /setgray load def
	/_ct /curveto load def
	/rc /cleartomark load def
	/kp /pop load def
	/INF 1.0 def
	/b 
		{
		bind def 
		} dup exec
	/x 
		{
		exch def 
		} b
	/regmark {
		gsave
			0.24 setlinewidth 0 setgray
			translate
			gsave
				1 1 4 {
					pop
					90 rotate
					newpath 0 0 moveto
					13.5 0 rlineto stroke
				} for
			grestore
			newpath 0 0 moveto
			0 0 9 0 360 arc stroke
		grestore
	} b
	/doRegMarks {
		gsave
			matrix defaultmatrix setmatrix
			initclip
			/clipbox [ clippath pathbbox ] def

			clipbox 0 get 18 add clipbox 1 get 18 add regmark
			clipbox 0 get 18 add clipbox 3 get 18 sub regmark
			clipbox 2 get 18 sub clipbox 3 get 18 sub regmark
			clipbox 2 get 18 sub clipbox 1 get 18 add regmark
		grestore
	} b
	/cutmark {
		gsave
			0.24 setlinewidth 0 setgray
			3 1 roll
			translate
			rotate
			newpath
			0 0 moveto
			18 0 rlineto stroke
			0 0 moveto
			0 18 rlineto stroke
		grestore
	} b
	/doCutMarks {
		gsave
			matrix defaultmatrix setmatrix
			initclip
			/clipbox [ clippath pathbbox ] def

			clipbox 0 get clipbox 1 get 0 cutmark
			clipbox 0 get clipbox 3 get -90 cutmark
			clipbox 2 get clipbox 3 get 180 cutmark
			clipbox 2 get clipbox 1 get 90 cutmark
		grestore
	} b
	/hyp 
		{
		dup mul exch dup mul add sqrt 
		} b
	/idd_null 
		{
		} def

	/idd_fills
	[
			/idd_null load
			/fill load
			{ fillcode setgray fillred fillgreen fillblue setrgbcolor fill }
		]
	def
	/realtype? 
		{
		dup type /realtype eq 
		} b
	/idd_fill
		{
		gsave
		fillcode realtype? 
			{
			pop 2 
			} if
		idd_fills exch get exec
		grestore
		}
	b
	/idd_dopath
		{
		idd_fill
		emred emgreen emblue setrgbcolor stroke
		}
	b
	/idd_doslash
		{
		slash
		fillcode realtype? 
			{
			pop strokepath 
			}
		if
		}
	b
	/slash
		{
		ht neg wd neg moveto
		ht wd lineto
		}
	b
	/idd_emary
	[
			{
				newpath 0 0 wd 0 360 arc
			}
			{			
					ht neg wd lineto
					ht tail neg rlineto
					ht wd lineto
					closepath
			}

			/idd_doslash load
			{			
					slash
					90 rotate
					idd_doslash			
			}	
		]
	def
	/idd_doendmark
		{
			/scode x
			4 copy
			3 -1 roll sub exch 3 -1 roll sub
			2 copy 0 ne exch 0 ne or
			{
				/xd x
				neg /yd x
				gsave	
					/p2y x /p2x x /p1y x /p1x x
					/wd x /ht x  /tail x /head x  
					setlinewidth
					/fillcode x
					/emblue x
					/emgreen x
					/emred x
					/fillblue x
					/fillgreen x
					/fillred x
					
					p2x p2y translate 0 0 moveto
					scode 0 gt 
						{
						 	xd yd atan rotate 	
						}
					if
					idd_emary scode get exec
					idd_dopath
				grestore
			}
			{
				mark 19 1 roll
				cleartomark
			}
			ifelse
		}
		b
	end
	
	}
ifelse

initializepage
(ROBERT HARRIS; page: 1 of 1)setjob
gS 0 0 584 763 rC
23 0 66 189 rC
24 186 :M
f0_14 sf
-.016($BFDIST/)A
gR
.5 G
gS 0 0 584 763 rC
111 0 61 188 rC
112 185 :M
0 G
f0_14 sf
-.149(packages/)A
gR
gS 0 0 584 763 rC
203 0 42 187 rC
204 184 :M
0 G
f0_14 sf
(pkgA/)S
gR
gS 0 0 584 763 rC
298 0 83 187 rC
299 184 :M
0 G
f0_14 sf
-.018(development/)A
gR
gS 0 0 584 763 rC
306 0 73 221 rC
307 218 :M
0 G
f0_14 sf
.076(V01-00-03/)A
gR
gS 0 0 584 763 rC
306 0 73 256 rC
307 253 :M
0 G
f0_14 sf
.076(V01-01-00/)A
gR
gS 0 0 584 763 rC
443 0 28 249 rC
444 246 :M
0 G
f0_14 sf
.264(src/)A
gR
gS 0 0 584 763 rC
444 0 102 270 rC
445 267 :M
0 G
f0_14 sf
.214 .021(pkgA/ \(includes\))J
gR
gS 0 0 584 763 rC
113 0 55 363 rC
114 360 :M
0 G
f0_14 sf
-.023(releases/)A
gR
gS 0 0 584 763 rC
370 0 42 399 rC
371 396 :M
0 G
f0_14 sf
(pkgA/)S
gR
gS 0 0 584 763 rC
287 0 40 416 rC
288 413 :M
0 G
f0_14 sf
.222(1.0.2/)A
gR
gS 0 0 584 763 rC
370 0 41 426 rC
371 423 :M
0 G
f0_14 sf
-.057(pkgB/)A
gR
gS 0 0 584 763 rC
287 0 40 449 rC
288 446 :M
0 G
f0_14 sf
.222(1.1.0/)A
gR
gS 0 0 584 763 rC
369 0 52 451 rC
370 448 :M
0 G
f0_14 sf
-.014(include/)A
gR
gS 0 0 584 763 rC
455 0 42 454 rC
456 451 :M
0 G
f0_14 sf
(pkgA/)S
gR
gS 0 0 584 763 rC
457 0 41 482 rC
458 479 :M
0 G
f0_14 sf
-.057(pkgB/)A
gR
gS 0 0 584 763 rC
192 0 53 509 rC
193 506 :M
0 G
f0_14 sf
.354(current/)A
gR
gS 0 0 584 763 rC
370 0 26 556 rC
371 553 :M
0 G
f0_14 sf
.11(lib/)A
gR
gS 0 0 584 763 rC
421 0 40 557 rC
422 554 :M
0 G
f0_14 sf
.087(IRIX/)A
gR
gS 0 0 584 763 rC
495 0 63 555 rC
496 552 :M
0 G
f0_14 sf
.05(libpkgA.a)A
gR
gS 0 0 584 763 rC
493 0 62 588 rC
494 585 :M
0 G
f0_14 sf
.021(libpkgB.a)A
gR
gS 0 0 584 763 rC
422 0 45 607 rC
423 604 :M
0 G
f0_14 sf
.134(Linux/)A
gR
gS 0 0 584 763 rC
422 0 36 631 rC
423 628 :M
0 G
f0_14 sf
-.187(OSF/)A
gR
gS 0 0 584 763 rC
370 0 29 629 rC
371 626 :M
0 G
f0_14 sf
.074(bin/)A
gR
gS 0 0 584 763 rC
206 0 41 276 rC
207 273 :M
0 G
f0_14 sf
-.057(pkgB/)A
gR
gS 0 0 584 763 rC
0 0 :M

iddDict begin _gs
_n
238.14534 501.152481 _mt 
253.084915 496.791962 _lt 
264.652603 493.099075 _lt 
267.873688 489.406204 _lt 
267.873688 486.240875 _lt 
268.508499 483.075546 _lt 
268.508499 479.910233 _lt 
268.508499 476.744888 _lt 
268.508499 473.579559 _lt 
268.508499 470.414261 _lt 
268.508499 467.248917 _lt 
268.508499 464.083588 _lt 
269.143311 460.918274 _lt 
269.143311 457.752945 _lt 
269.778122 454.587616 _lt 
272.317383 451.422318 _lt 
276.126266 449.839645 _lt 
276.270432 449.754059 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
1 1 :M

iddDict begin _gs
_n
0. 0. 0.
0. 0. 0.
0.
0.06
0. 0. 3. 5.
276.126266 449.839645 280.569977 447.201874
1 idd_doendmark
_gr end 

iddDict begin _gs
_n
407.005127 390.314209 _mt 
431.5 386.783417 _lt 
449. 376.945587 _lt 
454.5 359.107758 _lt 
450.5 345.851013 _lt 
442. 337.134811 _lt 
431. 329.878067 _lt 
422. 325.621323 _lt 
416. 321.783493 _lt 
410. 318.905121 _lt 
397. 314.107834 _lt 
390. 312.188919 _lt 
383. 310.270004 _lt 
370. 306.432175 _lt 
363. 303.5 _lt 
354.5 302.5 _lt 
348. 300.5 _lt 
342.5 300.5 _lt 
333. 300.5 _lt 
326. 300.5 _lt 
318.5 299.5 _lt 
309. 300. _lt 
294.5 300.5 _lt 
284. 300.5 _lt 
273. 298. _lt 
261.5 291. _lt 
257. 272. _lt 
257. 257. _lt 
256. 247. _lt 
256.5 240.5 _lt 
258. 231.5 _lt 
259.5 223. _lt 
261.5 215.5 _lt 
265. 208.56752 _lt 
270.5 201.371597 _lt 
278. 196.57431 _lt 
287. 191. _lt 
297.74147 187.535034 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
1 1 :M

iddDict begin _gs
_n
0. 0. 0.
0. 0. 0.
0.
0.06
0. 0. 3. 5.
287. 191. 302.5 186.
1 idd_doendmark
_gr end 

iddDict begin _gs
_n
490.506775 446.118607 _mt 
511. 442.714645 _lt 
520. 436.551147 _lt 
523.5 429.359482 _lt 
525. 424.826691 _lt 
525.5 419.188354 _lt 
526.5 413.550003 _lt 
527.5 406.778473 _lt 
526.5 401.245163 _lt 
526.5 391.759476 _lt 
525.5 387.016632 _lt 
525.5 381.483337 _lt 
522.5 371.207184 _lt 
521.5 366.46434 _lt 
518.5 360.931046 _lt 
514.5 356.188187 _lt 
510.5 351.445358 _lt 
506.5 346.702499 _lt 
502.5 341.959656 _lt 
496.5 338.007294 _lt 
491.5 333.26445 _lt 
483.5 330.893036 _lt 
475.5 326.150192 _lt 
467.5 322.988297 _lt 
461.5 320.616882 _lt 
449.5 315.874054 _lt 
443.5 312.712158 _lt 
431.5 306.388382 _lt 
425.5 303.226501 _lt 
421.5 300.169632 _lt 
416. 296.90271 _lt 
413. 294.426254 _lt 
412. 291.949799 _lt 
411. 290.026138 _lt 
410.5 286.311447 _lt 
410.5 280.673126 _lt 
413.5 276.825775 _lt 
420.5 273.114334 _lt 
428.5 270.731995 _lt 
435.144882 269.096756 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
1 1 :M

iddDict begin _gs
_n
0. 0. 0.
0. 0. 0.
0.
0.06
0. 0. 3. 5.
428.5 270.731995 440. 267.901917
1 idd_doendmark
_gr end 

iddDict begin _gs
_n
88.000015 182. _mt 
105.999985 182. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
97. 181.500015 _mt 
97. 356.999985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
96.500015 356.5 _mt 
109.499985 356.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
168.000015 182. _mt 
199.499985 182. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
184.5 181.000015 _mt 
184.5 270.499985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
184.000015 270. _mt 
202.999985 270. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
184.5 269.500015 _mt 
184.5 291.999985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
239.500015 182. _mt 
293.999985 182. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
375.000015 180. _mt 
434.499985 180. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
403.5 180.000015 _mt 
403.5 282.999985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
404.500015 221.5 _mt 
435.999985 221.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
404.000015 243. _mt 
436.999985 243. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
404.500015 263. _mt 
437.499985 263. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
267.5 182.000015 _mt 
267.5 284.999985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
267.000015 213. _mt 
298.499985 213. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
267.500015 248.5 _mt 
299.999985 248.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
164.500015 356.5 _mt 
228.499985 356.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
318.000015 356.5 _mt 
366.499985 356.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
343.5 356.500015 _mt 
343.5 641.499985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
343.000015 390. _mt 
366.499985 390. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
344.000015 445.5 _mt 
367.499985 445.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
343.500015 548. _mt 
366.999985 548. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
343.500015 622. _mt 
366.999985 622. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
174.5 356.500015 _mt 
174.5 557.999985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
176.000015 407.5 _mt 
281.499985 407.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
174.500015 442.5 _mt 
279.999985 442.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
175.000015 502. _mt 
187.999985 502. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
418.000015 445.5 _mt 
431.499985 445.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
432. 445.000015 _mt 
432. 504.499985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
432.500015 446. _mt 
449.999985 446. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
431.500015 476. _mt 
449.499985 476. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
390.500015 548. _mt 
420.999985 548. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
457.500015 548. _mt 
490.999985 548. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
405. 547.500015 _mt 
405. 640.499985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
404.500015 599. _mt 
419.999985 599. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
404.500015 622.5 _mt 
419.999985 622.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
474. 547.500015 _mt 
474. 613.499985 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
474.000015 581. _mt 
491.999985 581. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
169 0 220 147 rC
170 141 :M
0 G
f0_24 sf
24 f1_1 :p
213 :m
1.105 .11(Development Release)J
gR
gS 0 0 584 763 rC
0 0 :M

iddDict begin _gs
_n
403.500015 201. _mt 
436.499985 201. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
442 0 30 229 rC
443 226 :M
0 G
f0_14 sf
-.111(ups/)A
gR
gS 0 0 584 763 rC
0 0 :M

iddDict begin _gs
_n
343.500015 518.5 _mt 
366.499985 518.5 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
370 0 30 526 rC
371 523 :M
0 G
f0_14 sf
-.111(ups/)A
gR
gS 0 0 584 763 rC
0 0 :M

iddDict begin _gs
_n
412.855621 418.026825 _mt 
425.588837 416.971237 _lt 
437.823761 413.928391 _lt 
452.09787 410.885544 _lt 
464.332809 406.828415 _lt 
470.450272 400.742722 _lt 
476.922195 394.304413 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
480.646057 383.999908 _mt 
480.646057 376.914246 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
480.924393 368.701035 _mt 
476.289398 361.784653 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
495.501282 474.964386 _mt 
510. 476. _lt 
523. 474. _lt 
530. 471. _lt 
536. 467. _lt 
539. 461. _lt 
542.223602 454.552795 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
544. 444.499985 _mt 
544. 437.500015 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
544. 429.499985 _mt 
544. 419.500015 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 

iddDict begin _gs
_n
46.500015 591. _mt 
82.499985 591. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
99 0 126 598 rC
100 595 :M
0 G
f0_14 sf
.596 .06(Directories and Files)J
gR
gS 0 0 584 763 rC
101 0 96 626 rC
102 623 :M
0 G
f0_14 sf
-.004(Symbolic Links)A
gR
gS 0 0 584 763 rC
0 0 :M

iddDict begin _gs
_n
45.776398 618.552795 _mt 
49. 625. _lt 
55. 629. _lt 
61. 627. _lt 
63. 621. _lt 
69. 616. _lt 
75. 615. _lt 
75.175674 615.117081 _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
1 1 :M

iddDict begin _gs
_n
0. 0. 0.
0. 0. 0.
0.
0.06
0. 2. 3. 9.
75. 615. 81. 619.
1 idd_doendmark
_gr end 
442 0 86 210 rC
443 207 :M
0 G
f0_14 sf
-.029(GNUmakefile)A
gR
gS 0 0 584 763 rC
0 0 :M

iddDict begin _gs
_n
344.000015 419. _mt 
366.999985 419. _lt 
0. 0. 0. _sc
0 _lc 1. _lw
[ ] 0 setdash
_st
_gr end 
368 0 86 366 rC
369 363 :M
0 G
f0_14 sf
-.029(GNUmakefile)A
gR
gS 0 0 584 763 rC
442 0 33 189 rC
443 186 :M
0 G
f0_14 sf
-.614(CVS)A
gR
gS 0 0 584 763 rC
240 0 83 364 rC
241 361 :M
0 G
f0_14 sf
-.018(development/)A
gR
gS 0 0 584 763 rC
endp
%%Trailer
cleartomark
countdictstack exch sub { end } repeat
restore
%%EOF
